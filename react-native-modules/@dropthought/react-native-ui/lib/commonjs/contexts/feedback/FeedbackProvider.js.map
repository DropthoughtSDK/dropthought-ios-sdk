{"version":3,"sources":["FeedbackProvider.tsx"],"names":["FeedbackProvider","children","state","dispatch","React","useReducer","reducer","initialState"],"mappings":";;;;;;;AAAA;;AAEA;;AAIA;;;;;;AAMO,SAASA,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA+C;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,KAAK,CAACC,UAAN,CAAiBC,wBAAjB,EAA0BC,6BAA1B,CAA1B;AAEA,sBACE,oBAAC,qCAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEL;AAAtC,kBAEE,oBAAC,wCAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEC;AAAzC,KACGF,QADH,CAFF,CADF;AAQD","sourcesContent":["import * as React from 'react';\n\nimport {\n  FeedbackStateContext,\n  FeedbackDispatchContext,\n} from './FeedbackContext';\nimport { reducer, initialState } from './FeedbackReducer';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport function FeedbackProvider({ children }: Props) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <FeedbackStateContext.Provider value={state}>\n      {/* @ts-ignore */}\n      <FeedbackDispatchContext.Provider value={dispatch}>\n        {children}\n      </FeedbackDispatchContext.Provider>\n    </FeedbackStateContext.Provider>\n  );\n}\n"]}