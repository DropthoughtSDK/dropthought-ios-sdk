{"version":3,"sources":["SurveyPageIndicator.tsx"],"names":["SurveyPageIndicator","props","survey","pageIndex","rtl","themeColor","surveyProperty","hexCode","dimensionWidthType","dimensionStyles","DimensionWidthType","phone","phoneStyles","tabletStyles","currentPage","pages","titleStyle","styles","title","container","backgroundColor","pageTitle","StyleSheet","create","justifyContent","height","width","fontWeight","alignItems","paddingHorizontal","fontSize","letterSpacing","color","Colors","progressBarText","React","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAIA;;;;;;AASA,MAAMA,mBAAmB,GAAIC,KAAD,IAAkB;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAS,GAAG,CAAtB;AAAyBC,IAAAA;AAAzB,MAAiCH,KAAvC;AAEA,QAAMI,UAAU,GAAGH,MAAM,CAACI,cAAP,CAAsBC,OAAzC;AAEA,QAAMC,kBAAkB,GAAG,iDAA3B;AACA,QAAMC,eAAe,GACnBD,kBAAkB,KAAKE,wCAAmBC,KAA1C,GACIC,WADJ,GAEIC,YAHN;AAKA,QAAMC,WAAW,GAAGZ,MAAM,CAACa,KAAP,CAAaZ,SAAb,CAApB;AAEA,QAAMa,UAAU,GAAG,CAACC,MAAM,CAACC,KAAR,EAAeT,eAAe,CAACS,KAA/B,CAAnB;AAEA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLD,MAAM,CAACE,SADF,EAELV,eAAe,CAACU,SAFX,EAGL;AACEC,MAAAA,eAAe,EAAE,uBAAUf,UAAV;AADnB,KAHK,EAMLD,GAAG,GAAGa,MAAM,CAACb,GAAV,GAAgB,EANd;AADT,kBAUE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEY;AAAb,KAA0BF,WAAW,CAACO,SAAtC,CAVF,CADF;AAcD,CA7BD;;AA+BA,MAAMJ,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADoB;AAM/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,UAAU,EAAE;AADP,GANwB;AAS/BvB,EAAAA,GAAG,EAAE;AACHwB,IAAAA,UAAU,EAAE;AADT;AAT0B,CAAlB,CAAf;;AAcA,MAAMhB,WAAW,GAAGU,wBAAWC,MAAX,CAAkB;AACpCJ,EAAAA,SAAS,EAAE;AACTU,IAAAA,iBAAiB,EAAE;AADV,GADyB;AAIpCX,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE,IAFV;AAGLC,IAAAA,KAAK,EAAEC,eAAOC;AAHT;AAJ6B,CAAlB,CAApB;;AAWA,MAAMrB,YAAY,GAAGS,wBAAWC,MAAX,CAAkB;AACrCJ,EAAAA,SAAS,EAAE;AACTU,IAAAA,iBAAiB,EAAE;AADV,GAD0B;AAIrCX,EAAAA,KAAK,EAAE;AACLY,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE;AAFV;AAJ8B,CAAlB,CAArB;;4BAUeI,KAAK,CAACC,IAAN,CAAWpC,mBAAX,C","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\n\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { opacity10, Colors } from '../styles';\nimport type { Survey } from '../data';\n\ntype Props = {\n  pageIndex: number;\n  survey: Survey;\n  rtl: boolean;\n};\n\nconst SurveyPageIndicator = (props: Props) => {\n  const { survey, pageIndex = 0, rtl } = props;\n\n  const themeColor = survey.surveyProperty.hexCode;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const dimensionStyles =\n    dimensionWidthType === DimensionWidthType.phone\n      ? phoneStyles\n      : tabletStyles;\n\n  const currentPage = survey.pages[pageIndex];\n\n  const titleStyle = [styles.title, dimensionStyles.title];\n\n  return (\n    <View\n      style={[\n        styles.container,\n        dimensionStyles.container,\n        {\n          backgroundColor: opacity10(themeColor),\n        },\n        rtl ? styles.rtl : {},\n      ]}\n    >\n      <Text style={titleStyle}>{currentPage.pageTitle}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    height: 40,\n    width: '100%',\n  },\n  title: {\n    fontWeight: '600',\n  },\n  rtl: {\n    alignItems: 'flex-end',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 30,\n  },\n  title: {\n    fontSize: 14,\n    letterSpacing: 0.42,\n    color: Colors.progressBarText,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 16,\n    letterSpacing: 0.48,\n  },\n});\n\nexport default React.memo(SurveyPageIndicator);\n"]}