{"version":3,"sources":["MandatoryTitle.tsx"],"names":["MandatoryTitle","forgot","invalidMessage","question","style","rtl","i18n","dir","dimensionWidthType","fontColor","ref","React","useRef","addMandatoryRef","useEffect","current","mandatory","questionId","styles","horizontal","GlobalStyle","flexRowReverse","questionTitle","split","map","text","index","questionTitleSize","color","hint","t","StyleSheet","create","DimensionWidthType","phone","fontSize","tablet","Colors","mandatoryRed","flexDirection","flexWrap","marginBottom","textAlignVertical","alignSelf"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAIA;;;;;;;;AAUA,MAAMA,cAAc,GAAG,CAAC;AACtBC,EAAAA,MADsB;AAEtBC,EAAAA,cAAc,GAAG,EAFK;AAGtBC,EAAAA,QAHsB;AAItBC,EAAAA;AAJsB,CAAD,KAKV;AACX,QAAMC,GAAG,GAAGC,qBAAKC,GAAL,OAAe,KAA3B;AACA,QAAMC,kBAAkB,GAAG,iDAA3B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgB,sBAAtB;AAEA,QAAMC,GAAG,GAAGC,KAAK,CAACC,MAAN,CAAmB,IAAnB,CAAZ;AACA,QAAMC,eAAe,GAAG,qCAAxB;AAEAF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,QAAIJ,GAAG,CAACK,OAAJ,IAAeZ,QAAQ,CAACa,SAA5B,EAAuC;AACrCH,MAAAA,eAAe,CAACV,QAAQ,CAACc,UAAV,EAAsBP,GAAG,CAACK,OAA1B,CAAf;AACD;AACF,GAJD,EAIG,CAACF,eAAD,EAAkBV,QAAQ,CAACa,SAA3B,EAAsCb,QAAQ,CAACc,UAA/C,CAJH;AAMA,sBACE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEP,GADP;AAEE,IAAA,KAAK,EAAE,CAACQ,MAAM,CAACC,UAAR,EAAoBf,KAApB,EAA2BC,GAAG,IAAIe,gBAAYC,cAA9C;AAFT,KAIGlB,QAAQ,CAACmB,aAAT,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,CAAsC,CAACC,IAAD,EAAOC,KAAP,kBACrC,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAE,CACLR,MAAM,CAACI,aADF,EAELK,iBAAiB,CAACnB,kBAAD,CAFZ,EAGL;AAAEoB,MAAAA,KAAK,EAAEnB;AAAT,KAHK;AAFT,KAQGgB,IAAI,GAAG,GARV,CADD,CAJH,EAgBGtB,QAAQ,CAACa,SAAT,iBAAsB,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACW;AAApB,SAhBzB,eAiBE,oBAAC,+BAAD,CACE;AADF;AAEE,IAAA,OAAO,EAAE5B,MAAM,GAAGK,qBAAKwB,CAAL,CAAO,kBAAP,CAAH,GAAgC5B;AAFjD,IAjBF,CADF;AAwBD,CA3CD;;eA6CeF,c;;;AAEf,MAAM2B,iBAAiB,GAAGI,wBAAWC,MAAX,CAAkB;AAC1C,GAACC,wCAAmBC,KAApB,GAA4B;AAC1BC,IAAAA,QAAQ,EAAE;AADgB,GADc;AAI1C,GAACF,wCAAmBG,MAApB,GAA6B;AAC3BD,IAAAA,QAAQ,EAAE;AADiB;AAJa,CAAlB,CAA1B;;AASA,MAAMjB,MAAM,GAAGa,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJD,IAAAA,KAAK,EAAES,eAAOC,YADV;AAEJH,IAAAA,QAAQ,EAAE;AAFN,GADyB;AAK/BhB,EAAAA,UAAU,EAAE;AACVoB,IAAAA,aAAa,EAAE,KADL;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GALmB;AAS/BlB,EAAAA,aAAa,EAAE;AACba,IAAAA,QAAQ,EAAE,EADG;AAEbM,IAAAA,YAAY,EAAE,CAFD;AAGbC,IAAAA,iBAAiB,EAAE,QAHN;AAIbC,IAAAA,SAAS,EAAE;AAJE;AATgB,CAAlB,CAAf","sourcesContent":["import { View, Text, StyleSheet, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nimport { useAddMandatoryRef } from '../contexts/survey-page';\nimport GlobalStyle, { Colors } from '../styles';\nimport QuestionWarningMessage from './QuestionWarningMessage';\nimport i18n from '../translation';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { useTheme } from '../contexts/theme';\nimport type { Question } from '../data';\n\ntype Props = {\n  forgot?: boolean;\n  invalidMessage?: string;\n  question: Question;\n  style?: ViewStyle;\n};\n\nconst MandatoryTitle = ({\n  forgot,\n  invalidMessage = '',\n  question,\n  style,\n}: Props) => {\n  const rtl = i18n.dir() === 'rtl';\n  const dimensionWidthType = useDimensionWidthType();\n  const { fontColor } = useTheme();\n\n  const ref = React.useRef<View>(null);\n  const addMandatoryRef = useAddMandatoryRef();\n\n  React.useEffect(() => {\n    if (ref.current && question.mandatory) {\n      addMandatoryRef(question.questionId, ref.current);\n    }\n  }, [addMandatoryRef, question.mandatory, question.questionId]);\n\n  return (\n    <View\n      ref={ref}\n      style={[styles.horizontal, style, rtl && GlobalStyle.flexRowReverse]}\n    >\n      {question.questionTitle.split(' ').map((text, index) => (\n        <Text\n          key={index}\n          style={[\n            styles.questionTitle,\n            questionTitleSize[dimensionWidthType],\n            { color: fontColor },\n          ]}\n        >\n          {text + ' '}\n        </Text>\n      ))}\n      {question.mandatory && <Text style={styles.hint}>*</Text>}\n      <QuestionWarningMessage\n        // forgot message has higher priority than custom invalid message\n        message={forgot ? i18n.t('survey:mandatory') : invalidMessage}\n      />\n    </View>\n  );\n};\n\nexport default MandatoryTitle;\n\nconst questionTitleSize = StyleSheet.create({\n  [DimensionWidthType.phone]: {\n    fontSize: 16,\n  },\n  [DimensionWidthType.tablet]: {\n    fontSize: 18,\n  },\n});\n\nconst styles = StyleSheet.create({\n  hint: {\n    color: Colors.mandatoryRed,\n    fontSize: 18,\n  },\n  horizontal: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  questionTitle: {\n    fontSize: 18,\n    marginBottom: 2,\n    textAlignVertical: 'center',\n    alignSelf: 'center',\n  },\n});\n"]}