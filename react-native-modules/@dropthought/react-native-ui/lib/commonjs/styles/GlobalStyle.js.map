{"version":3,"sources":["GlobalStyle.ts"],"names":["QuestionContentTextSize","StyleSheet","create","DimensionWidthType","phone","fontSize","tablet","GlobalStyle","container","alignItems","backgroundColor","Colors","white","flex","justifyContent","dialog","borderRadius","paddingBottom","paddingLeft","paddingRight","paddingTop","dialogButton","dialogDescription","fontFamily","lineHeight","dialogLeftButtonDescription","color","purple","textAlign","dialogPrimaryButton","dialogRightButtonDescription","flex1","flexEnd","flexRowReverse","flexDirection","horizontalFlip","transform","rotateY","null","questionContainer","marginTop","textAlignLeft","textAlignRight","row","fullCenter","loadingMask","loadingMaskBG","position","top","right","left","width","height"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\nimport { Colors } from './Colors';\nimport { DimensionWidthType } from '../hooks/useWindowDimensions';\n\nexport const QuestionContentTextSize = StyleSheet.create({\n  [DimensionWidthType.phone]: {\n    fontSize: 17,\n  },\n  [DimensionWidthType.tablet]: {\n    fontSize: 15,\n  },\n});\n\nexport const GlobalStyle = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: Colors.white,\n    flex: 1,\n    justifyContent: 'center',\n  },\n  dialog: {\n    backgroundColor: Colors.white,\n    borderRadius: 5,\n    paddingBottom: 30,\n    paddingLeft: 46,\n    paddingRight: 46,\n    paddingTop: 40,\n  },\n  dialogButton: {\n    alignItems: 'center',\n    borderRadius: 3,\n    justifyContent: 'center',\n    paddingBottom: 5,\n    paddingLeft: 24,\n    paddingRight: 24,\n    paddingTop: 5,\n  },\n  dialogDescription: {\n    fontFamily: 'Roboto-Regular',\n    fontSize: 14,\n    lineHeight: 20,\n  },\n  dialogLeftButtonDescription: {\n    color: Colors.purple,\n    fontFamily: 'Roboto-Regular',\n    fontSize: 14,\n    lineHeight: 20,\n    textAlign: 'center',\n  },\n  dialogPrimaryButton: {\n    backgroundColor: Colors.purple,\n  },\n  dialogRightButtonDescription: {\n    color: Colors.white,\n    fontFamily: 'Roboto-Regular',\n    fontSize: 14,\n    lineHeight: 20,\n    textAlign: 'center',\n  },\n  flex1: {\n    flex: 1,\n  },\n  flexEnd: {\n    justifyContent: 'flex-end',\n  },\n  flexRowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  horizontalFlip: {\n    transform: [\n      {\n        rotateY: '180deg',\n      },\n    ],\n  },\n  null: {},\n  // used in OpenQuestion, SliderRatingQuestion, ...the survey question component\n  questionContainer: {\n    fontSize: 18,\n    marginTop: 45,\n  },\n  textAlignLeft: {\n    textAlign: 'left',\n  },\n  textAlignRight: {\n    textAlign: 'right',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  fullCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loadingMask: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Colors.loadingMaskBG,\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n  },\n});\n"]}