{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","Greeter","name","EvaluateRuleSet","ruleSet","pageFeedback","result","rule","condition","indexOf","andArr","split","evalCond","andCond","conditionArr","filteredFeedback","filterFeedback","length","evaluateCondition","questionId","e","eval","toPageId","orArr","orCond","filter","el","logDetails","feedback","targetAnswer","textOrIndexArr","trim","parseInt","otherFlag","map","text","some","answer","every"],"mappings":"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","sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// dummy integration test\nexports.Greeter = (name) => `Nĭ hăo ${name}`;\n/**\n * This function is used to evaluate skip logic rule based on the skip authoring rules\n * and the page feedback passed to evaluate and provide the next page index on condition met\n * it will return empty string for conditions not met.\n * @param ruleSet\n * @param pageFeedback\n */\nexports.EvaluateRuleSet = (ruleSet, pageFeedback) => {\n  let result = '';\n  for (const rule of ruleSet) {\n    if (rule.condition.indexOf('&&') > -1) {\n      const andArr = rule.condition.split('&&');\n      let evalCond = '';\n      for (const andCond of andArr) {\n        const conditionArr = andCond.split('.');\n        const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n        if (filteredFeedback.length > 0) {\n          // logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0]\n            )\n          ) {\n            evalCond =\n              evalCond.length > 0 ? evalCond + ' && ' + true : evalCond + true;\n          } else {\n            evalCond =\n              evalCond.length > 0\n                ? evalCond + ' && ' + false\n                : evalCond + false;\n          }\n        }\n      }\n      // console.log('evalCond ' + evalCond);\n      // eslint-disable-next-line no-eval\n      const e = eval;\n      result = e(evalCond) ? rule.toPageId : '';\n    } else if (rule.condition.indexOf('||') > -1) {\n      const orArr = rule.condition.split('||');\n      for (const orCond of orArr) {\n        const conditionArr = orCond.split('.');\n        const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n        if (filteredFeedback.length > 0) {\n          // logDetails(conditionArr, filteredFeedback);\n          if (\n            evaluateCondition(\n              conditionArr,\n              filteredFeedback[0].questionId,\n              filteredFeedback[0]\n            )\n          ) {\n            result = rule.toPageId;\n          }\n        }\n      }\n    } else {\n      const conditionArr = rule.condition.split('.');\n      const filteredFeedback = filterFeedback(pageFeedback, conditionArr[0]);\n      if (filteredFeedback.length > 0) {\n        // logDetails(conditionArr, filteredFeedback);\n        if (\n          evaluateCondition(\n            conditionArr,\n            filteredFeedback[0].questionId,\n            filteredFeedback[0]\n          )\n        ) {\n          result = rule.toPageId;\n        }\n      }\n    }\n    if (result.length > 0) {\n      break;\n    }\n  }\n  return result;\n};\nconst filterFeedback = (pageFeedback, questionId) => {\n  return pageFeedback.filter((el) => {\n    return (\n      el.questionId === questionId\n      // && el.textOrIndexArr === (conditionArr.length === 3 ? [conditionArr[2]] : [''])\n    );\n  });\n};\n// eslint-disable-next-line no-unused-vars\nconst logDetails = (conditionArr, filteredFeedback) => {\n  // console.log('conditionArr[1] => ' + conditionArr[1]);\n  // console.log('value=> ' + (conditionArr.length === 3 ? conditionArr[2] : ''));\n  // console.log('filteredFeedback=> ' + JSON.stringify(filteredFeedback[0]));\n  // console.log('evaluateCondition=> ' + evaluateCondition(conditionArr, filteredFeedback[0].questionId, filteredFeedback[0].textOrIndexArr[0]));\n};\n/**\n *\n * @param condition\n * @param questionId\n * @param feedback\n */\nconst evaluateCondition = (conditionArr, questionId, feedback) => {\n  let result = false;\n  let targetAnswer;\n  if (questionId === conditionArr[0]) {\n    switch (conditionArr[1]) {\n      case 'ansr':\n        result = feedback.textOrIndexArr[0].trim().length > 0;\n        break;\n      case 'nasr':\n        result = feedback.textOrIndexArr[0].trim().length === 0;\n        break;\n      case 'answ':\n        targetAnswer = parseInt(conditionArr[2], 10);\n        if (targetAnswer === -2) {\n          // check \"other\" case\n          result = feedback.otherFlag === true;\n        } else {\n          // check if any answer contains the target answer\n          result = feedback.textOrIndexArr\n            .map((text) => parseInt(text, 10))\n            .some((answer) => answer === targetAnswer);\n        }\n        break;\n      case 'nasw':\n        // skip target answer check, if user doesn't have any feedback (skip optional question)\n        if (feedback.textOrIndexArr[0].trim().length === 0) {\n          break;\n        }\n        targetAnswer = parseInt(conditionArr[2], 10);\n        if (targetAnswer === -2) {\n          // check \"other\" case\n          result = feedback.otherFlag !== true;\n        } else {\n          // check if all answer doesn't contain the target answer\n          result = feedback.textOrIndexArr\n            .map((text) => parseInt(text, 10))\n            .every((answer) => answer !== targetAnswer);\n        }\n        break;\n    }\n  }\n  return result;\n};\n"]}