{"version":3,"sources":["StartScreenLayout.tsx"],"names":["React","View","Text","Image","StyleSheet","TouchableOpacity","Colors","DimensionWidthType","useDimensionWidthType","Button","i18n","useTheme","defaultIconSource","require","defaultIconSize","phone","tablet","LANG_TITLE","en","ar","StartScreen","onLanguageSelect","onStart","survey","dimensionWidthType","fontColor","backgroundColor","isPhone","styles","phoneStyles","tabletStyles","surveyProperty","surveyName","welcomeText","image","hexCode","width","height","iconStyle","iconSource","undefined","uri","iconView","buttonWidth","languagesView","languages","length","languageView","map","language","index","language_label","color","shareStyles","container","main","title","subtitle","divider","t","takeSurveyButton","create","white","flex","alignItems","justifyContent","paddingHorizontal","textAlign","marginTop","fontSize","opacity","lineHeight","marginRight","flexDirection","maxHeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Colors } from '../styles';\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport Button from '../components/Button';\nimport i18n from '../translation';\nimport { useTheme } from '../contexts/theme';\nimport type { Survey as OriginSurvey } from '../data';\n\ntype Survey = OriginSurvey & {\n  languages: ('en' | 'ar')[];\n};\n\nconst defaultIconSource = require('../assets/rating.png');\nconst defaultIconSize = {\n  [DimensionWidthType.phone]: 65,\n  [DimensionWidthType.tablet]: 72,\n};\n\nconst LANG_TITLE = {\n  en: 'English',\n  ar: 'العربي',\n};\n\ntype Props = {\n  onLanguageSelect: (language: string) => void;\n  onStart: () => void;\n  survey: Survey;\n};\n\nconst StartScreen = ({ onLanguageSelect, onStart, survey }: Props) => {\n  const dimensionWidthType = useDimensionWidthType();\n  const { fontColor, backgroundColor } = useTheme();\n\n  const isPhone = dimensionWidthType === DimensionWidthType.phone;\n  const styles = isPhone ? phoneStyles : tabletStyles;\n\n  const { surveyProperty, surveyName, welcomeText } = survey;\n  const {\n    image,\n    hexCode,\n    width = defaultIconSize[dimensionWidthType],\n    height = defaultIconSize[dimensionWidthType],\n  } = surveyProperty;\n  const iconStyle = {\n    width,\n    height,\n  };\n  const iconSource = image === undefined ? defaultIconSource : { uri: image };\n\n  const iconView = (\n    <Image resizeMode=\"cover\" style={iconStyle} source={iconSource} />\n  );\n\n  const buttonWidth = isPhone ? 143 : 160;\n\n  const languagesView = () => {\n    const { languages } = survey;\n\n    // if there's only one language or no languages, no need to display\n    if (!languages || !languages.length || languages.length <= 1) return null;\n\n    const languageView = languages.map((language: 'en' | 'ar', index) => (\n      <TouchableOpacity\n        key={index}\n        onPress={() => {\n          onLanguageSelect && onLanguageSelect(language);\n        }}\n      >\n        <Text\n          style={[\n            styles.language_label,\n            {\n              color:\n                language !== survey.language\n                  ? survey.surveyProperty.hexCode\n                  : fontColor,\n            },\n          ]}\n        >\n          {LANG_TITLE[language]}\n        </Text>\n      </TouchableOpacity>\n    ));\n    return <View style={styles.languages}>{languageView}</View>;\n  };\n\n  return (\n    <View style={[shareStyles.container, { backgroundColor }]}>\n      <View style={styles.main}>\n        {iconView}\n        <Text style={[styles.title, { color: fontColor }]}>{surveyName}</Text>\n        {!!welcomeText && (\n          <Text style={[styles.subtitle, { color: fontColor }]}>\n            {welcomeText}\n          </Text>\n        )}\n        <View style={styles.divider} />\n        <Button\n          width={buttonWidth}\n          title={i18n.t('start-survey:start-btn')}\n          color={hexCode}\n          onPress={() => {\n            onStart();\n          }}\n          containerStyle={styles.takeSurveyButton}\n        />\n      </View>\n      {languagesView()}\n    </View>\n  );\n};\n\nexport default StartScreen;\n\nconst shareStyles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    flex: 1,\n    alignItems: 'center',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 38,\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    marginTop: 14,\n    fontSize: 22,\n    opacity: 0.9,\n    lineHeight: 27,\n  },\n  subtitle: {\n    lineHeight: 23,\n    marginTop: 12,\n    fontSize: 16,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  divider: {\n    backgroundColor: '#c3c3c3',\n    height: 1,\n    width: '100%',\n    marginTop: 26,\n  },\n  takeSurveyButton: {\n    marginTop: 21,\n  },\n  language_label: {\n    fontSize: 13,\n    marginRight: 19,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '12%',\n    maxHeight: 90,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  main: {\n    flex: 1,\n    alignItems: 'center',\n    paddingHorizontal: 70,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    lineHeight: 38,\n    marginTop: 18,\n    fontSize: 31,\n    opacity: 0.9,\n  },\n  subtitle: {\n    lineHeight: 25,\n    marginTop: 17,\n    fontSize: 21,\n    textAlign: 'center',\n    opacity: 0.72,\n  },\n  divider: {\n    backgroundColor: '#c3c3c3',\n    height: 1,\n    width: '100%',\n    marginTop: 46,\n  },\n  takeSurveyButton: {\n    marginTop: 37,\n  },\n  language_label: {\n    fontSize: 13,\n    marginRight: 19,\n  },\n  languages: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    height: '10%',\n    maxHeight: 80,\n  },\n});\n"]}