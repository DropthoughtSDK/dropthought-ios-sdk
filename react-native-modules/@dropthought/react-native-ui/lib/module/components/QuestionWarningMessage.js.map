{"version":3,"sources":["QuestionWarningMessage.tsx"],"names":["React","Text","StyleSheet","View","GlobalStyle","Colors","i18n","QuestionWarningMessage","message","rtl","dir","styles","container","horizontalFlip","tip","bubble","hint","create","flexDirection","marginTop","top","width","height","backgroundColor","borderStyle","borderTopWidth","borderBottomWidth","borderRightWidth","borderTopColor","borderBottomColor","borderRightColor","minWidth","paddingHorizontal","paddingVertical","borderRadius","color","black","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,IAA3B,QAAuC,cAAvC;AAEA,OAAOC,WAAP,IAAsBC,MAAtB,QAAoC,WAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAMA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AACrD,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AACd,QAAMC,GAAG,GAAGH,IAAI,CAACI,GAAL,OAAe,KAA3B;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBH,GAAG,IAAIL,WAAW,CAACS,cAAtC;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACK,IAAR,EAAcP,GAAG,IAAIL,WAAW,CAACS,cAAjC;AAAb,KACGL,OADH,CADF,CAFF,CADF;AAUD,CAdD;;AAgBA,eAAeD,sBAAf;AAEA,MAAMI,MAAM,GAAGT,UAAU,CAACe,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,SAAS,EAAE;AAFF,GADoB;AAK/BL,EAAAA,GAAG,EAAE;AACHM,IAAAA,GAAG,EAAE,EADF;AAEHC,IAAAA,KAAK,EAAE,CAFJ;AAGHC,IAAAA,MAAM,EAAE,CAHL;AAIHC,IAAAA,eAAe,EAAE,aAJd;AAKHC,IAAAA,WAAW,EAAE,OALV;AAMHC,IAAAA,cAAc,EAAE,CANb;AAOHC,IAAAA,iBAAiB,EAAE,CAPhB;AAQHC,IAAAA,gBAAgB,EAAE,EARf;AASHC,IAAAA,cAAc,EAAE,aATb;AAUHC,IAAAA,iBAAiB,EAAE,aAVhB;AAWHC,IAAAA,gBAAgB,EAAE;AAXf,GAL0B;AAkB/Bf,EAAAA,MAAM,EAAE;AACNQ,IAAAA,eAAe,EAAE,SADX;AAENQ,IAAAA,QAAQ,EAAE,GAFJ;AAGNC,IAAAA,iBAAiB,EAAE,EAHb;AAINC,IAAAA,eAAe,EAAE,EAJX;AAKNC,IAAAA,YAAY,EAAE;AALR,GAlBuB;AAyB/BlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,KAAK,EAAE9B,MAAM,CAAC+B,KADV;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAzByB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, StyleSheet, View } from 'react-native';\n\nimport GlobalStyle, { Colors } from '../styles';\nimport i18n from '../translation';\n\ntype Props = {\n  message: string;\n};\n\nconst QuestionWarningMessage = ({ message }: Props) => {\n  if (!message) return null;\n  const rtl = i18n.dir() === 'rtl';\n\n  return (\n    <View style={[styles.container, rtl && GlobalStyle.horizontalFlip]}>\n      <View style={styles.tip} />\n      <View style={styles.bubble}>\n        <Text style={[styles.hint, rtl && GlobalStyle.horizontalFlip]}>\n          {message}\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport default QuestionWarningMessage;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    marginTop: 12,\n  },\n  tip: {\n    top: 13,\n    width: 0,\n    height: 0,\n    backgroundColor: 'transparent',\n    borderStyle: 'solid',\n    borderTopWidth: 7,\n    borderBottomWidth: 7,\n    borderRightWidth: 12,\n    borderTopColor: 'transparent',\n    borderBottomColor: 'transparent',\n    borderRightColor: '#FFDEE4',\n  },\n  bubble: {\n    backgroundColor: '#FFDEE4',\n    minWidth: 280,\n    paddingHorizontal: 18,\n    paddingVertical: 10,\n    borderRadius: 9,\n  },\n  hint: {\n    color: Colors.black,\n    fontSize: 13,\n  },\n});\n"]}