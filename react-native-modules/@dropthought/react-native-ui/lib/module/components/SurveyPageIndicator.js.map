{"version":3,"sources":["SurveyPageIndicator.tsx"],"names":["React","StyleSheet","View","Text","DimensionWidthType","useDimensionWidthType","opacity10","Colors","SurveyPageIndicator","props","survey","pageIndex","rtl","themeColor","surveyProperty","hexCode","dimensionWidthType","dimensionStyles","phone","phoneStyles","tabletStyles","currentPage","pages","titleStyle","styles","title","container","backgroundColor","pageTitle","create","justifyContent","height","width","fontWeight","alignItems","paddingHorizontal","fontSize","letterSpacing","color","progressBarText","memo"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,IAA3B,QAAuC,cAAvC;AAEA,SACEC,kBADF,EAEEC,qBAFF,QAGO,8BAHP;AAIA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,WAAlC;;AASA,MAAMC,mBAAmB,GAAIC,KAAD,IAAkB;AAC5C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAS,GAAG,CAAtB;AAAyBC,IAAAA;AAAzB,MAAiCH,KAAvC;AAEA,QAAMI,UAAU,GAAGH,MAAM,CAACI,cAAP,CAAsBC,OAAzC;AAEA,QAAMC,kBAAkB,GAAGX,qBAAqB,EAAhD;AACA,QAAMY,eAAe,GACnBD,kBAAkB,KAAKZ,kBAAkB,CAACc,KAA1C,GACIC,WADJ,GAEIC,YAHN;AAKA,QAAMC,WAAW,GAAGX,MAAM,CAACY,KAAP,CAAaX,SAAb,CAApB;AAEA,QAAMY,UAAU,GAAG,CAACC,MAAM,CAACC,KAAR,EAAeR,eAAe,CAACQ,KAA/B,CAAnB;AAEA,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLD,MAAM,CAACE,SADF,EAELT,eAAe,CAACS,SAFX,EAGL;AACEC,MAAAA,eAAe,EAAErB,SAAS,CAACO,UAAD;AAD5B,KAHK,EAMLD,GAAG,GAAGY,MAAM,CAACZ,GAAV,GAAgB,EANd;AADT,kBAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW;AAAb,KAA0BF,WAAW,CAACO,SAAtC,CAVF,CADF;AAcD,CA7BD;;AA+BA,MAAMJ,MAAM,GAAGvB,UAAU,CAAC4B,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADoB;AAM/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,UAAU,EAAE;AADP,GANwB;AAS/BrB,EAAAA,GAAG,EAAE;AACHsB,IAAAA,UAAU,EAAE;AADT;AAT0B,CAAlB,CAAf;AAcA,MAAMf,WAAW,GAAGlB,UAAU,CAAC4B,MAAX,CAAkB;AACpCH,EAAAA,SAAS,EAAE;AACTS,IAAAA,iBAAiB,EAAE;AADV,GADyB;AAIpCV,EAAAA,KAAK,EAAE;AACLW,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE,IAFV;AAGLC,IAAAA,KAAK,EAAE/B,MAAM,CAACgC;AAHT;AAJ6B,CAAlB,CAApB;AAWA,MAAMnB,YAAY,GAAGnB,UAAU,CAAC4B,MAAX,CAAkB;AACrCH,EAAAA,SAAS,EAAE;AACTS,IAAAA,iBAAiB,EAAE;AADV,GAD0B;AAIrCV,EAAAA,KAAK,EAAE;AACLW,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,aAAa,EAAE;AAFV;AAJ8B,CAAlB,CAArB;AAUA,4BAAerC,KAAK,CAACwC,IAAN,CAAWhC,mBAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\n\nimport {\n  DimensionWidthType,\n  useDimensionWidthType,\n} from '../hooks/useWindowDimensions';\nimport { opacity10, Colors } from '../styles';\nimport type { Survey } from '../data';\n\ntype Props = {\n  pageIndex: number;\n  survey: Survey;\n  rtl: boolean;\n};\n\nconst SurveyPageIndicator = (props: Props) => {\n  const { survey, pageIndex = 0, rtl } = props;\n\n  const themeColor = survey.surveyProperty.hexCode;\n\n  const dimensionWidthType = useDimensionWidthType();\n  const dimensionStyles =\n    dimensionWidthType === DimensionWidthType.phone\n      ? phoneStyles\n      : tabletStyles;\n\n  const currentPage = survey.pages[pageIndex];\n\n  const titleStyle = [styles.title, dimensionStyles.title];\n\n  return (\n    <View\n      style={[\n        styles.container,\n        dimensionStyles.container,\n        {\n          backgroundColor: opacity10(themeColor),\n        },\n        rtl ? styles.rtl : {},\n      ]}\n    >\n      <Text style={titleStyle}>{currentPage.pageTitle}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    height: 40,\n    width: '100%',\n  },\n  title: {\n    fontWeight: '600',\n  },\n  rtl: {\n    alignItems: 'flex-end',\n  },\n});\n\nconst phoneStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 30,\n  },\n  title: {\n    fontSize: 14,\n    letterSpacing: 0.42,\n    color: Colors.progressBarText,\n  },\n});\n\nconst tabletStyles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 16,\n    letterSpacing: 0.48,\n  },\n});\n\nexport default React.memo(SurveyPageIndicator);\n"]}