{"version":3,"sources":["SurveyModal.js"],"names":["ModalProps","SurveyModal","props","sdkProps","modalProps","GlobalStyle","flex1","SurveyModalOpenSurveyContext","React","createContext","undefined","useOpenSurvey","context","useContext","Error","SurveyModalContainer","children","onClose","visible","setVisible","useState","openSurvey","useCallback","onCloseSurveyHandler"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,MAAMA,UAAU,GAAG,CACjB,UADiB,EAEjB,eAFiB,EAGjB,aAHiB,EAIjB,SAJiB,EAKjB,gBALiB,EAMjB,QANiB,EAOjB,mBAPiB,EAQjB,uBARiB,EASjB,WATiB,EAUjB,qBAViB,EAWjB,qBAXiB,CAAnB;AAcA;AACA;AACA;;AACO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMC,QAAQ,GAAG,iBAAKH,UAAL,EAAiBE,KAAjB,CAAjB;AACA,QAAME,UAAU,GAAG,iBAAKJ,UAAL,EAAiBE,KAAjB,CAAnB;AACA,sBACE,oBAAC,kBAAD;AAAO,IAAA,iBAAiB,EAAC,gBAAzB;AAA0C,IAAA,WAAW;AAArD,KAA0DE,UAA1D,gBACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,2BAAYC;AAAzB,kBACE,oBAAC,iBAAD,EAAcH,QAAd,CADF,CADF,CADF;AAOD;AAED;;;AACO,MAAMI,4BAA4B,gBAAGC,KAAK,CAACC,aAAN,CAC1C,MAAMC,SADoC,CAArC;;;AAIA,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,OAAO,GAAGJ,KAAK,CAACK,UAAN,CAAiBN,4BAAjB,CAAhB;;AACA,MAAIK,OAAO,KAAKF,SAAhB,EAA2B;AACzB,UAAM,IAAII,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,SAAOF,OAAP;AACD,CAPM;AASP;AACA;AACA;;;;;AACO,MAAMG,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqB,KAAGf;AAAxB,CAAD,KAAqC;AACvE,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA9B;AAEA,QAAMC,UAAU,GAAGb,KAAK,CAACc,WAAN,CAAkB,MAAM;AACzCH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAIA,QAAMI,oBAAoB,GAAGf,KAAK,CAACc,WAAN,CAAkB,MAAM;AACnDL,IAAAA,OAAO,IAAIA,OAAO,EAAlB;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAH4B,EAG1B,CAACF,OAAD,CAH0B,CAA7B;AAKA,sBACE,oBAAC,4BAAD,CAA8B,QAA9B;AAAuC,IAAA,KAAK,EAAEI;AAA9C,KACGL,QADH,EAEGE,OAAO,gBACN,oBAAC,WAAD,eACMhB,KADN;AAEE,IAAA,OAAO,EAAEgB,OAFX;AAGE,IAAA,OAAO,EAAEK;AAHX,KADM,GAMJ,IARN,CADF;AAYD,CAxBM;AA0BP;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA","sourcesContent":["import * as React from 'react';\nimport { View, Modal } from 'react-native';\nimport { pick, omit } from 'ramda';\nimport { GlobalStyle } from '@dropthought/react-native-ui';\nimport SDKEntry from './SDKEntry';\n\nconst ModalProps = [\n  'animated',\n  'animationType',\n  'transparent',\n  'visible',\n  'onRequestClose',\n  'onShow',\n  'presentationStyle',\n  'supportedOrientations',\n  'onDismiss',\n  'onOrientationChange',\n  'hardwareAccelerated',\n];\n\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } props\n */\nexport function SurveyModal(props) {\n  const sdkProps = omit(ModalProps, props);\n  const modalProps = pick(ModalProps, props);\n  return (\n    <Modal presentationStyle=\"overFullScreen\" transparent {...modalProps}>\n      <View style={GlobalStyle.flex1}>\n        <SDKEntry {...sdkProps} />\n      </View>\n    </Modal>\n  );\n}\n\n/** @type {React.Context<(param: OpenSurveyProps=) => void>} */\nexport const SurveyModalOpenSurveyContext = React.createContext(\n  () => undefined\n);\n\nexport const useOpenSurvey = () => {\n  const context = React.useContext(SurveyModalOpenSurveyContext);\n  if (context === undefined) {\n    throw new Error('useOpenSurvey must be used within a SurveyModalContainer');\n  }\n\n  return context;\n};\n\n/**\n * @param {SurveyModalProps & SDKEntryProps & ModalProps } param0\n */\nexport const SurveyModalContainer = ({ children, onClose, ...props }) => {\n  const [visible, setVisible] = React.useState(false);\n\n  const openSurvey = React.useCallback(() => {\n    setVisible(true);\n  }, []);\n\n  const onCloseSurveyHandler = React.useCallback(() => {\n    onClose && onClose();\n    setVisible(false);\n  }, [onClose]);\n\n  return (\n    <SurveyModalOpenSurveyContext.Provider value={openSurvey}>\n      {children}\n      {visible ? (\n        <SurveyModal\n          {...props}\n          visible={visible}\n          onClose={onCloseSurveyHandler}\n        />\n      ) : null}\n    </SurveyModalOpenSurveyContext.Provider>\n  );\n};\n\n/**\n * @typedef {import('./SDKEntry').SDKEntryProps} SDKEntryProps\n * @typedef {import('react-native').ModalProps} ModalProps\n */\n/**\n * @typedef {object} SurveyModalProps\n * @property {boolean} visible\n */\n/**\n * @typedef {SDKEntryProps & ModalProps} OpenSurveyProps\n */\n"]}