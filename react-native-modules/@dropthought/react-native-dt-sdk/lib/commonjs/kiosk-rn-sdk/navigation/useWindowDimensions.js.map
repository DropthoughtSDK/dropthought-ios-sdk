{"version":3,"sources":["useWindowDimensions.ts"],"names":["useWindowDimensions","dimensions","setDimensions","React","useState","height","width","Dimensions","get","useEffect","onChange","window","d","addEventListener","removeEventListener"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAOA,SAASA,mBAAT,GAA+B;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,KAAK,CAACC,QAAN,CAA+B,MAAM;AACvE,UAAM;AAAEC,MAAAA,MAAM,GAAG,CAAX;AAAcC,MAAAA,KAAK,GAAG;AAAtB,QAA4BC,wBAAWC,GAAX,CAAe,QAAf,CAAlC;;AACA,WAAO;AACLH,MAAAA,MADK;AAELC,MAAAA;AAFK,KAAP;AAID,GANmC,CAApC;AAOAH,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAwC;AACvD,YAAM;AAAEL,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAoBM,MAA1B;AACAT,MAAAA,aAAa,CAAEU,CAAD,IAAO;AACnB,YAAIN,KAAK,KAAKM,CAAC,CAACN,KAAZ,IAAqBD,MAAM,KAAKO,CAAC,CAACP,MAAtC,EAA8C;AAC5C,iBAAOO,CAAP;AACD;;AAED,eAAO;AACLN,UAAAA,KADK;AAELD,UAAAA;AAFK,SAAP;AAID,OATY,CAAb;AAUD,KAZD;;AAaAK,IAAAA,QAAQ,CAAC;AACPC,MAAAA,MAAM,EAAEJ,wBAAWC,GAAX,CAAe,QAAf;AADD,KAAD,CAAR;;AAGAD,4BAAWM,gBAAX,CAA4B,QAA5B,EAAsCH,QAAtC;;AAEA,WAAO,MAAM;AACXH,8BAAWO,mBAAX,CAA+B,QAA/B,EAAyCJ,QAAzC;AACD,KAFD;AAGD,GAtBD,EAsBG,EAtBH;AAwBA,SAAOT,UAAP;AACD;;eAEcD,mB","sourcesContent":["import * as React from 'react';\nimport { Dimensions, ScaledSize } from 'react-native';\n\ntype DimensionsType = {\n  height: number;\n  width: number;\n};\n\nfunction useWindowDimensions() {\n  const [dimensions, setDimensions] = React.useState<DimensionsType>(() => {\n    const { height = 0, width = 0 } = Dimensions.get('window');\n    return {\n      height,\n      width,\n    };\n  });\n  React.useEffect(() => {\n    const onChange = ({ window }: { window: ScaledSize }) => {\n      const { width, height } = window;\n      setDimensions((d) => {\n        if (width === d.width && height === d.height) {\n          return d;\n        }\n\n        return {\n          width,\n          height,\n        };\n      });\n    };\n    onChange({\n      window: Dimensions.get('window'),\n    });\n    Dimensions.addEventListener('change', onChange);\n\n    return () => {\n      Dimensions.removeEventListener('change', onChange);\n    };\n  }, []);\n\n  return dimensions;\n}\n\nexport default useWindowDimensions;\n"]}