{"version":3,"sources":["encrypted-storage.js"],"names":["SDK_ACCOUNT","encryptedStorageClient","initialize","apiKey","AsyncStorage","EncryptedStorage","setAccount","EncryptStorage","removeItem","key","getItem","setItem","value","setItemT","getItemT","defaultValue"],"mappings":";;;;;;;;AAAA;;AAEA,MAAMA,WAAW,GAAG,WAApB;AACA,IAAIC,sBAAJ;;AAEO,eAAeC,UAAf,CAA0BC,MAA1B,EAAkCC,YAAlC,EAAgD;AACrD,MAAI,CAACH,sBAAL,EAA6B;AAC3BA,IAAAA,sBAAsB,GAAG,IAAII,sCAAJ,CAAqBD,YAArB,CAAzB;AACD;;AACD,SAAOH,sBAAsB,CAACK,UAAvB,CAAkCN,WAAlC,EAA+CG,MAA/C,CAAP;AACD;;AAED,MAAMI,cAAc,GAAG;AACrB;AACAC,EAAAA,UAAU,CAACC,GAAD,EAAM;AAAA;;AACd,oCAAOR,sBAAP,0DAAO,sBAAwBO,UAAxB,CAAmCC,GAAnC,CAAP;AACD,GAJoB;;AAMrB;AACAC,EAAAA,OAAO,CAACD,GAAD,EAAM;AAAA;;AACX,qCAAOR,sBAAP,2DAAO,uBAAwBS,OAAxB,CAAgCD,GAAhC,CAAP;AACD,GAToB;;AAWrB;AACF;AACA;AACA;AACEE,EAAAA,OAAO,CAACF,GAAD,EAAMG,KAAN,EAAa;AAAA;;AAClB,qCAAOX,sBAAP,2DAAO,uBAAwBU,OAAxB,CAAgCF,GAAhC,EAAqCG,KAArC,CAAP;AACD,GAjBoB;;AAmBrB;AACF;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,CAACJ,GAAD,EAAMG,KAAN,EAAa;AAAA;;AACnB,qCAAOX,sBAAP,2DAAO,uBAAwBY,QAAxB,CAAiCJ,GAAjC,EAAsCG,KAAtC,CAAP;AACD,GA1BoB;;AA4BrB;AACF;AACA;AACA;AACA;AACEE,EAAAA,QAAQ,CAACL,GAAD,EAAMM,YAAN,EAAoB;AAAA;;AAC1B,qCAAOd,sBAAP,2DAAO,uBAAwBa,QAAxB,CAAiCL,GAAjC,EAAsCM,YAAtC,CAAP;AACD;;AAnCoB,CAAvB;eAsCeR,c","sourcesContent":["import { EncryptedStorage } from '@bct-taipei/dt-rn-encrypted-storage';\n\nconst SDK_ACCOUNT = 'DT_ENC_V1';\nlet encryptedStorageClient;\n\nexport async function initialize(apiKey, AsyncStorage) {\n  if (!encryptedStorageClient) {\n    encryptedStorageClient = new EncryptedStorage(AsyncStorage);\n  }\n  return encryptedStorageClient.setAccount(SDK_ACCOUNT, apiKey);\n}\n\nconst EncryptStorage = {\n  /** @param {string} key */\n  removeItem(key) {\n    return encryptedStorageClient?.removeItem(key);\n  },\n\n  /** @param {string} key */\n  getItem(key) {\n    return encryptedStorageClient?.getItem(key);\n  },\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   */\n  setItem(key, value) {\n    return encryptedStorageClient?.setItem(key, value);\n  },\n\n  /**\n   * @template T\n   * @param {string} key\n   * @param {T} value\n   */\n  setItemT(key, value) {\n    return encryptedStorageClient?.setItemT(key, value);\n  },\n\n  /**\n   * @template T\n   * @param {string} key\n   * @param {T=} defaultValue\n   */\n  getItemT(key, defaultValue) {\n    return encryptedStorageClient?.getItemT(key, defaultValue);\n  },\n};\n\nexport default EncryptStorage;\n"]}