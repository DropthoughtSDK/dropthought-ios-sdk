{"version":3,"sources":["ProgramAPI.js"],"names":["fetcherInstance","PROGRAM_PATH","apiGetProgramById","programId","language","timezone","requestConfig","fetcher","params","method","authRequired","url","request","then","response","data","result"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,aAA9B;AAEA,MAAMC,YAAY,GAAG,cAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,iBAAf,CACH;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAQ,GAAG,IAAvB;AAA6BC,EAAAA;AAA7B,CADG,EAEHC,aAAa,GAAG,EAFb,EAGHC,OAAO,GAAGP,eAHP,EAIL;AACE;AACA,QAAMQ,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,YAAY,EAAE,IAFH;AAGXF,IAAAA,MAAM,EAAE;AACJJ,MAAAA,QADI;AAEJC,MAAAA;AAFI,KAHG;AAOX,OAAGC;AAPQ,GAAf;AAUA,QAAMK,GAAG,GAAI,GAAEV,YAAa,IAAGE,SAAU,EAAzC;AACA,SAAOI,OAAO,CAACK,OAAR,CAAgBD,GAAhB,EAAqBH,MAArB,EAA6BK,IAA7B,CAAmCC,QAAD,IAAc;AACnD,WAAOA,QAAQ,CAACC,IAAT,CAAcC,MAArB;AACH,GAFM,CAAP;AAGH;AAED;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {fetcherInstance} from './APIClient'\n\nconst PROGRAM_PATH = '/api/program'\n\n/**\n * get single language version of a program by id\n * @param {{\n *   programId: string,\n *   language?: string,\n *   timezone?: string,\n * }} param0\n * @param {RequestConfig} requestConfig\n * @param {Fetcher=} fetcher\n * @returns {Promise<Survey>}\n */\nexport async function apiGetProgramById(\n    {programId, language = 'en', timezone},\n    requestConfig = {},\n    fetcher = fetcherInstance,\n) {\n    /** @type {RequestConfig} */\n    const params = {\n        method: 'GET',\n        authRequired: true,\n        params: {\n            language,\n            timezone,\n        },\n        ...requestConfig,\n    }\n\n    const url = `${PROGRAM_PATH}/${programId}`\n    return fetcher.request(url, params).then((response) => {\n        return response.data.result\n    })\n}\n\n/**\n * @typedef {import('./Fetcher').RequestConfig} RequestConfig\n * @typedef {import('./Fetcher').Fetcher} Fetcher\n * @typedef {import('../data').Survey} Survey\n * @typedef {import('../data').SurveyLangMaps} SurveyLangMaps\n */\n"]}